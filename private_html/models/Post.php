<?php

namespace app\models;

use app\components\MainController;
use app\controllers\PostController;
use app\controllers\ListController;
use Yii;
use yii\helpers\Html;
use yii\helpers\Url;

/**
 * This is the model class for table "item".
 *
 * @property int $publish_date
 * @property int $summary
 */
class Post extends Item
{
    const TYPE_NEWS = 1;
    const TYPE_ARTICLE = 2;

    public static $modelName = 'post';

    public static $typeLabels = [
        self::TYPE_NEWS => 'news',
        self::TYPE_ARTICLE => 'article'
    ];

    public function getTypeLabel($type = false)
    {
        if (!$type)
            $type = $this->type;
        return trans('words', ucfirst(self::$typeLabels[$type]));
    }

    public static function getTypeLabels()
    {
        $lbs = [];
        foreach (self::$typeLabels as $key => $label)
            $lbs[$key] = trans('words', ucfirst($label));
        return $lbs;
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'item';
    }

    public function init()
    {
        parent::init();
        $this->dynaDefaults = array_merge($this->dynaDefaults, [
            'body' => ['CHAR', ''],
            'image' => ['CHAR', ''],
            'publish_date' => ['CHAR', ''],
            'summary' => ['CHAR', ''],
            'seen' => ['INTEGER', ''],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return array_merge(parent::rules(), [
            [['body', 'image', 'formCategories', 'publish_date'], 'required'],
            [['summary'], 'string'],
            [['publish_date'], 'safe'],
            ['seen', 'default', 'value' => 0],
            ['modelID', 'default', 'value' => isset(Yii::$app->controller->models[self::$modelName]) ? Yii::$app->controller->models[self::$modelName] : null],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return array_merge(parent::attributeLabels(), [
            'body' => trans('words', 'Body'),
            'image' => trans('words', 'Image'),
            'publish_date' => trans('words', 'Publish Date'),
            'summary' => trans('words', 'Summary'),
        ]);
    }

    /**
     * {@inheritdoc}
     * @return ItemQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new ItemQuery(get_called_class());
    }

    public static function validQuery()
    {
        return self::find()->valid()->andWhere(['<=', self::columnGetString('publish_date'), time()]);
    }

    public function getComments_count()
    {
        return 0;
    }

    public function getUrl()
    {
        return Url::to(['/post/show', 'id' => $this->id, 'title' => encodeUrl($this->name)]);
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

    }

    public function formAttributes()
    {
        return array_merge(parent::formAttributes(), [
            'image' => [
                'type' => static::FORM_FIELD_TYPE_DROP_ZONE,
                'containerCssClass' => 'col-sm-12',
                'temp' => MainController::$tempDir,
                'path' => PostController::$imageDir,
                'filesOptions' => PostController::$imageOptions,
                'options' => [
                    'url' => Url::to(['upload-image']),
                    'removeUrl' => Url::to(['delete-image']),
                    'sortable' => false, // sortable flag
                    'sortableOptions' => [], // sortable options
                    'htmlOptions' => ['class' => 'single', 'id' => Html::getInputId(new self(), 'image')],
                    'options' => [
                        'createImageThumbnails' => true,
                        'addRemoveLinks' => true,
                        'dictRemoveFile' => 'حذف',
                        'addViewLinks' => true,
                        'dictViewFile' => '',
                        'dictDefaultMessage' => 'جهت آپلود تصویر کلیک کنید',
                        'acceptedFiles' => 'png, jpeg, jpg',
                        'maxFiles' => 1,
                        'maxFileSize' => 0.5,
                    ],
                ]
            ],
            'type' => [
                'type' => static::FORM_FIELD_TYPE_SELECT,
                'items' => \app\models\Post::getTypeLabels()
            ],
            'formCategories' => [
                'type' => static::FORM_FIELD_TYPE_SELECT,
                'items' => Category::getWithType(Category::CATEGORY_TYPE_NEWS),
                'options' => ['prompt' => trans('words', 'Select Category')]
            ],
            'summary' => [
                'type' => static::FORM_FIELD_TYPE_TEXT_AREA,
                'containerCssClass' => 'col-sm-12',
            ],
            'body' => [
                'type' => static::FORM_FIELD_TYPE_TEXT_EDITOR,
                'containerCssClass' => 'col-sm-12',
                'options' => [
                    'options' => ['rows' => 30]
                ]
            ],
            'gallery' => [
                'type' => static::FORM_FIELD_TYPE_DROP_ZONE,
                'containerCssClass' => 'col-sm-12',
                'temp' => MainController::$tempDir,
                'path' => Attachment::getAttachmentPath(),
                'filesOptions' => PostController::$galleryOptions,
                'options' => [
                    'url' => Url::to(['upload-attachment']),
                    'removeUrl' => Url::to(['delete-attachment']),
                    'sortable' => false, // sortable flag
                    'sortableOptions' => [], // sortable options
                    'htmlOptions' => ['class' => '', 'id' => Html::getInputId(new self(), 'gallery')],
                    'options' => [
                        'createImageThumbnails' => true,
                        'addRemoveLinks' => true,
                        'dictRemoveFile' => 'حذف',
                        'addViewLinks' => true,
                        'dictViewFile' => '',
                        'dictDefaultMessage' => 'جهت آپلود تصاویر کلیک کنید',
                        'acceptedFiles' => 'png, jpeg, jpg',
                        'maxFiles' => 10,
                        'maxFileSize' => 0.5,
                    ],
                ]
            ],
//            'publish_date' => [
//                'type' => static::FORM_FIELD_TYPE_DATE,
//                'options' => ['class' => 'form-control m-input m-input--solid', 'autocomplete' => 'off']
//            ]
        ]);
    }
}
